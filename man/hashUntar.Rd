% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hashUntar.R
\docType{methods}
\name{hashUntar}
\alias{hashUntar}
\title{Extract files from a tar archive downloaded}
\usage{
hashUntar(tarfile, checkhash = FALSE, dbHash = "dbHash.sqlite",
  quick = FALSE, dir)
}
\arguments{
\item{tarfile}{A character vector containing path to tarfile.}

\item{checkhash}{A logical argument. If TRUE, check if untar/unzip files are found locally and cross-check their checksum value
with value logged in dbHash from previous untar/unzip event. When checksums match, a message raises indicating the files
are already properly untar/unzip. When checksums don't match or untar/unzip files don't exist locally, untar/unzip occurs and
checksum compiles. If FALSE, untar/unzip occurs even if the files exist locally. Default is FALSE.}

\item{dbHash}{A character string. The path to the database file where checksum values are logged If the named
database does not yet exist, one is created. Default is "dbHash.sqlite".}

\item{quick}{A logical argument. If TRUE, checksum is compiled using the combination of the filename and its size.
If FALSE, cheksum is compiled using the object. Default is FALSE.}

\item{dir}{A character string representing path to output directory.}
}
\description{
This function untar and unzip dataset previously downloaded from url. Prior to untar, the function can check if untar
was previously performed (untar/unzip files exist locally).
}
\examples{
library(SpaDES)
sim <- SpaDES::simInit(times = list(start=0.0, end=5.0),
                       objects=list(),
                       params = list(),
                       modules = list(),
                       paths = list(outputPath=tempdir()))
url <- "ftp://knn4ftp:knn4ftp@tree.nfis.org/kNN-LandCover.tar"
destfile <- tempdir()
hashDownload(url, destfile, sim, module, destfile, checkhash = FALSE, cascade = FALSE)
tar<- file.path(destfile, basename(url))
hashUntar(tar, checkhash = FALSE, dbHash = "dbHash.sqlite", quick = FALSE , destfile)
}
\author{
Melina Houle
}
