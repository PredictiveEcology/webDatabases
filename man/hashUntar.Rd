% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hashUntar.R
\docType{methods}
\name{hashUntar}
\alias{hashUntar}
\title{Extract files from a tar archive and log checksum value to avoid repeating event}
\usage{
hashUntar(tarfile, destfile, checkhash = TRUE, quick = FALSE,
  dbHash = "dbHash.sqlite")
}
\arguments{
\item{tarfile}{A character string. Represents path to tarfile.}

\item{destfile}{A character string. Represents the name where resulting file is saved.}

\item{checkhash}{Logical. If \code{TRUE} (default), check if file exists locally
and cross-check the file's checksum value with that logged
from a previous event, skippng redownload if checksum matches.
When checksums don't match or file doesn't exist locally,
the file is downloaded and its checksum computed.
If \code{FALSE}, the function is executed even if the file
is found locally.}

\item{quick}{Logical. If \code{TRUE}, checksum is compiled using the combination
of the filename and its size.
If \code{FALSE} (default), cheksum is compiled using the object.}

\item{dbHash}{Character string. The path to the database file where checksum
value of file is logged.
If the database does not yet exist, one is created. Default is \code{"dbHash.sqlite"}.}
}
\value{
Untarred/unzipped \code{tarfile} in a subfolder under \code{destfile} using
        \code{basename{tarfile}} name.
}
\description{
Prior to untar, the function check if untar was previously performed (untarred
file exist locally) and compare checksum value from previous event when present.
Untar is performed when file doesn't exists or checksums don't match.
}
\examples{
  urlpath <- "ftp://sidads.colorado.edu/pub/DATASETS/NOAA/G02171/Hudson_Bay/2006"
  urlfile <-  "cis_SGRDRHB_20060904_pl_a.tar"
  url <- file.path(urlpath, urlfile)
  hashDownload(url, destfile = tempdir(), cascade = FALSE)
  tar<- file.path(tempdir(), basename(url))
  hashUntar(tar, tempdir(), checkhash= FALSE)
}
\author{
Melina Houle
}
\keyword{internal}
