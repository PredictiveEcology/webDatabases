% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hashUnzip.R
\docType{methods}
\name{hashUnzip}
\alias{hashUnzip}
\title{Extract files from a zip archive downloaded and log checksum value}
\usage{
hashUnzip(zipfile, destfile, checkhash = TRUE, quick = FALSE,
  dbHash = getOption("webdatabases.dbfile"))
}
\arguments{
\item{zipfile}{A character vector. Contains path to zipfile.}

\item{destfile}{A character string. Represents the name where resulting file is saved.}

\item{checkhash}{Logical. If \code{TRUE} (default), check if file exists locally
and cross-check the file's checksum value with that logged
from a previous event, skippng redownload if checksum matches.
When checksums don't match or file doesn't exist locally,
the file is downloaded and its checksum computed.
If \code{FALSE}, the function is executed even if the file
is found locally.}

\item{quick}{Logical. If \code{TRUE}, checksum is compiled using the combination
of the filename and its size.
If \code{FALSE} (default), cheksum is compiled using the object.}

\item{dbHash}{Character string. The path to the database file where checksum
value of file is logged.
If the database does not yet exist, one is created.
Default is to use the option \code{webdatabases.dbfile}.}
}
\value{
Invoked for its side-effect of saving unzipped file in a subdirectory
        using the zipfile basename in the \file{destfile/} directory.
}
\description{
Unzip dataset previously downloaded from url, first checking if
unzip was previously performed (unzip file exists locally).
}
\examples{
u <-"http://ftp.geogratis.gc.ca/pub/nrcan_rncan/archive/vector/cli_itc_50k/land_use/L040J03.zip"
hashDownload(u, destfile = tempdir(), checkhash= FALSE, cascade = FALSE)
zip <- file.path(tempdir(), basename(u))
hashUnzip(zip, tempdir(), checkhash = FALSE)
}
\author{
Melina Houle
}
\keyword{internal}
