% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hashUnzip.R
\docType{methods}
\name{hashUnzip}
\alias{hashUnzip}
\title{Extract files from a zip archive downloaded and log checksum value}
\usage{
hashUnzip(zipfile, destfile, checkhash = TRUE, quick = TRUE, dbHash)
}
\arguments{
\item{zipfile}{A character vector. Contain path to a zipfile.}

\item{destfile}{A character string. Represents the path where unzip file is saved.}

\item{checkhash}{Logical. If \code{TRUE}, check if unzip file is found locally
and cross-check its checksum value with value logged in dbHash
from previous unzip event.
When checksums match, a message raises indicating the file is
already properly unzip.
When checksums doesn't match or unzip file doesn't exist locally,
unzip occurs and checksum computed.
If \code{FALSE} (default), unzip occurs even if the files exist locally.}

\item{quick}{Logical. If \code{TRUE}, checksum is coputed using the combination
of the filename and its size.
If \code{FALSE} (default), checksum is computed using the object.}

\item{dbHash}{A character string. The path to the database file where file
checksum value is logged.
If the named database does not yet exist, one is created.
Default is \code{"dbHash.sqlite"}.}
}
\value{
Invoked for its side-effect of saving unzipped file in a subdirectory
        using the zipfile basename in the \file{destfile/} directory.
}
\description{
unzip dataset previously downloaded from url, first checking if
unzip was previously performed (unzip file exists locally).
}
\examples{
\dontrun{
sim <- SpaDES::simInit(times = list(start = 0.0, end = 5.0),
                       objects = list(),
                       params = list(),
                       modules = list(),
                       paths = list(outputPath = tempdir()))
url<-"ftp://ccrp.tor.ec.gc.ca/pub/EC_data/AHCCD_daily/Homog_daily_mean_temp_v2016.zip"
algo <- "xxhash64"
destfile <- tempdir()
hashDownload(url, destfile, sim, module, cascade = FALSE)
zip <- file.path(destfile, basename(url))
hashUnzip(zip, destfile, checkhash = FALSE,  quick = FALSE, dbHash = "dbHash.sqlite")
}

}
\author{
Melina Houle
}
